plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.21.0'
}

group = 'heroes'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
  
	//Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Spring Cloud
	implementation platform("org.springframework.cloud:spring-cloud-dependencies:2023.0.2")

	// Spring Cloud Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Oauth2
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//AWS S3
	implementation 'software.amazon.awssdk:s3:2.20.0'
	implementation 'software.amazon.awssdk:auth:2.20.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		target("**/*.java")
		importOrder()
		// 사용하지 않은 import문 제거
		removeUnusedImports()
		// 2개 이상 있거나 이제 앞뒤로 불필요한 공백이 있을 때 제거해주는 옵션
		trimTrailingWhitespace()
		// 줄은 공백으로 남아있을 수 있도록 항상 옵션을 걸어준다.
		endWithNewline()
		// google java format
		googleJavaFormat().aosp()
	}
}

// git pre-commit hook task 설정
tasks.register("addGitPreCommitHook", Copy) {
	from 'scripts/pre-commit'
	into '.git/hooks'
}

compileJava.dependsOn addGitPreCommitHook